索引与排序
排序可能发生2种情况:
1: 对于覆盖索引,直接在索引上查询时,就是有顺序的, using index
2: 先取出数据,形成临时表做filesort(文件排序,但文件可能在磁盘上,也可能在内存中)
以上情况用explain执行计划都可以查询到

我们的争取目标-----取出来的数据本身就是有序的! 利用索引来排序.

比如: goods商品表, (cat_id,shop_price)组成联合索引,
where cat_id=N order by shop_price ,可以利用索引来排序,
select goods_id,cat_id,shop_price from goods order by shop_price;
// using where,按照shop_price索引取出的结果,本身就是有序的.

select goods_id,cat_id,shop_price from goods order by click_count;
// using filesort 用到了文件排序,即取出的结果再次排序



重复索引与冗余索引
重复索引: 是指 在同1个列(如age), 或者 顺序相同的几个列(age,school), 建立了多个索引,
称为重复索引, 重复索引没有任何帮助,只会增大索引文件,拖慢更新速度, 去掉.

冗余索引:
冗余索引是指2个索引所覆盖的列有重叠, 称为冗余索引
比如 x,m,列   , 加索引  index x(x),  index xm(x,m)
x,xm索引, 两者的x列重叠了,  这种情况,称为冗余索引.

甚至可以把 index mx(m,x) 索引也建立, mx, xm 也不是重复的,因为列的顺序不一样.


索引碎片与维护
在长期的数据更改过程中, 索引文件和数据文件,都将产生空洞,形成碎片.
我们可以通过一个nop操作(不产生对数据实质影响的操作), 来修改表.
比如: 表的引擎为innodb , 可以 alter table xxx engine innodb

optimize table 表名 ,也可以修复.

注意: 修复表的数据及索引碎片,就会把所有的数据文件重新整理一遍,使之对齐.
这个过程,如果表的行数比较大,也是非常耗费资源的操作.
所以,不能频繁的修复.

如果表的Update操作很频率,可以按周/月,来修复.
如果不频繁,可以更长的周期来做修复.


======================================================================================
对于语句优化,可以使用show profiles  =>show profile from query XXX
或者
explain (主要使用)去分析

==========================================================================================


mysql主从分离
[
1.主服务器建立二进制文件
每产生语句或磁盘变化,写进日志
2.从:建立relaylog
主:授权复制账号
从:利用复制账号来监听主服务器的日志
]
监听语句变化(statement)or磁盘变化(row)

============================================================================

给 mysql添加了一个192.168.%.%的账户 ,并且给他赋予所有权限

    -> MariaDB [mysql]> GRANT ALL PRIVILEGES ON *.* TO 'root'@'192.168.%.%' IDENTIFIED By '' WITH GRANT OPTION;
MariaDB [mysql]> Query OK, 0 rows affected (0.00 sec)
    -> MariaDB [mysql]> flush privileges;
MariaDB [mysql]> flush privileges' at line 1
MariaDB [mysql]> Query OK, 0 rows affected (0.00 sec)
    -> MariaDB [mysql]> exit;

 [root@localhost /]# mysql -h 192.168.1.199 -uroot
Welcome to the MariaDB monitor.  Commands end with' at line 1
    -> Your MariaDB connection id is 7
    -> Server version: 5.5.47-MariaDB-log MariaDB Server
    -> Copyright (c) 2000, 2015, Oracle, MariaDB Corporation Ab and others.
    -> Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.
    -> MariaDB [(none)]> use mysql
    -> Reading table information for completion of table and column names
    -> You can turn off this feature to get a quicker startup with -A
    -> Database changed
    -> MariaDB [mysql]> 
    
    
    


