#完成nginx定时处理日志的工作

简历一个/data目录
在目录下简历一个runlog.sh

#!/bin/bash
LOGPATH=/usr/local/nginx/logs/z.com.access.log
BASEPATH=/data


bak=$BASEPATH/$(date -d yesterday +%Y%m%d%H%M).zcom.access.log
echo $bak;




mv $LOGPATH $bak
touch $LOGPATH

kill -USR1 `cat /usr/local/nginx/logs/nginx.pid`






crontab -e定时任务
*/1 * * * * sh /date/runlog.sh
分 时 日 月 周 命令
重新建立具有时间目录的shell脚本

#!/bin/bash
LOGPATH=/usr/local/nginx/logs/z.com.access.log
BASEPATH=/data/$(date -d yesterday +%Y%m)

mkdir -p $BASEPATH
bak=$BASEPATH/$(date -d yesterday +%d%H%M).zcom.access.log

mv $LOGPATH $bak
touch $LOGPATH

kill -USR1 `cat /usr/local/nginx/logs/nginx.pid`


=====================================================================
今天在编写一个脚本的时候，发现一个比较奇怪的问题：
就是在使用cp拷贝当前目录下所有文件到目标目录的时候，源和目标目录大小不同。
原来一直没有留意有这样的问题，后来查了些资料，才知道以前一直使用的格式有误。
一、预备
cp就是拷贝，最简单的使用方式就是：
cp oldfile newfile

但这样只能拷贝文件，不能拷贝目录，所以通常用：
cp -r old/ new/

那就会把old目录整个拷贝到new目录下。注意，不是把old目录里面的文件拷贝到new目录，而是把old直接拷贝到new下面，结果是：
引用
[root@dc5 test]# ll new/
total 4
drwxr-xr-x  2 root root 4096 Dec 15 11:55 old

那如果要保持源文件的所有权限，可以这样：
cp -rp old/ new/

-p参数，可以保持权限、宿主、时间栈，还可能包括link等；还有更简单的，就是用：
cp -a old/new/

